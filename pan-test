#!/usr/bin/python
import argparse
import os
import sys
import subprocess

HERE = os.path.dirname(__file__)

# XXX don't add extra lines - config needs to fit in 20 lines.
CONFIG = {
    'EN': ['-H119', '-e40', '-M', 'en',
           '--presynaptic-noise=0.0',
           '--control-corpus', 'corpus/control/EN'],
    'GR': ['-H99', '-e40', '-M', 'gr',
           '--presynaptic-noise=0.0',
           #'--reverse',
           '--control-corpus', 'corpus/control/GR'],
    'SP': ['-H119', '-e40', '-M', 'es',
           '--presynaptic-noise=0.0',
           #'--reverse',
           '--control-corpus', 'corpus/control/SP'],
    'DU': ['-H119', '-e30', '-M', 'nl',
           '--presynaptic-noise=0.0', '--concat-texts',
           '--control-corpus', 'corpus/control/DU'],
}

CMD = ['./train-net', '-n', 'pan', '--batch-size=40',
       '-l2e-1', '-L-5', '--leakage-decay=0.9',
       #'--balanced-training',
       #'--swap-corpora',
       '--activation=2', '--pan-hedge=0.0',
       '--learning-method=4', '-d70', '--ignore-start=10',
       '--try-swapping-texts',
       '-r8',
       '--reverse',
       '--concat-texts',
       ]


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('-i', '--input-dir', help="find testing corpus here")
    parser.add_argument('-o', '--output-dir', help="write results here")
    parser.add_argument('--raw-answers', action="store_true",
                        help="also write results not adjusted for c@1")
    parser.add_argument('--raw-answers-trace', action="store_true",
                        help="write raw results after every epoch")

    args = parser.parse_args()

    for subdir in os.listdir(args.input_dir):
        if not os.path.isdir(os.path.join(args.input_dir, subdir)):
            continue
        if subdir[:2] in CONFIG and subdir[2:].isdigit():
            key = subdir[:2]
            print >> sys.stderr, "using %s config" % key
            break

    output_filename = os.path.join(args.output_dir, "answers.txt")

    cmd = (CMD + CONFIG[key] + [args.input_dir] +
           ['--pan-answers', output_filename])

    if args.raw_answers:
        raw_output_filename = os.path.join(args.output_dir, "raw-answers.txt")
        cmd.extend(['--raw-answers', raw_output_filename])
    if args.raw_answers_trace:
        trace_pattern = os.path.join(args.output_dir, "raw-answers-%d.txt")
        cmd.extend(['--raw-answers-trace', trace_pattern])

    print >> sys.stderr, "running %s" % (' '.join(cmd))
    subprocess.call(cmd)

main()
